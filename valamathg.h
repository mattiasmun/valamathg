/* valamathg.h generated by valac 0.20.1, the Vala compiler, do not modify */


#ifndef __VALAMATHG_H__
#define __VALAMATHG_H__

#include <glib.h>
#include <stdlib.h>
#include <string.h>
#include <float.h>
#include <math.h>
#include <gtk/gtk.h>
#include <gio/gio.h>

G_BEGIN_DECLS


#define MATHG_TYPE_ELMNT (mathg_elmnt_get_type ())
typedef struct _mathgElmnt mathgElmnt;

#define MATHG_TYPE_MY_TIMER (mathg_my_timer_get_type ())
typedef struct _mathgMyTimer mathgMyTimer;

#define MATHG_TYPE_OPERATE (mathg_operate_get_type ())
typedef struct _mathgOperate mathgOperate;

#define MATHG_TYPE_EVENT_COG (mathg_event_cog_get_type ())
#define MATHG_EVENT_COG(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MATHG_TYPE_EVENT_COG, mathgEventCog))
#define MATHG_EVENT_COG_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MATHG_TYPE_EVENT_COG, mathgEventCogClass))
#define MATHG_IS_EVENT_COG(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MATHG_TYPE_EVENT_COG))
#define MATHG_IS_EVENT_COG_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MATHG_TYPE_EVENT_COG))
#define MATHG_EVENT_COG_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MATHG_TYPE_EVENT_COG, mathgEventCogClass))

typedef struct _mathgEventCog mathgEventCog;
typedef struct _mathgEventCogClass mathgEventCogClass;
typedef struct _mathgEventCogPrivate mathgEventCogPrivate;

#define MATHG_TYPE_CONF_FILE (mathg_conf_file_get_type ())
typedef struct _mathgConfFile mathgConfFile;

#define MATHG_TYPE_MATH_COG (mathg_math_cog_get_type ())

#define MATHG_TYPE_NUMBER_UTILS (mathg_number_utils_get_type ())
typedef struct _mathgNumberUtils mathgNumberUtils;
typedef struct _mathgMathCog mathgMathCog;

struct _mathgElmnt {
	gint64 answer;
	gchar* guess;
	gchar* question;
	gchar* result;
};

struct _mathgMyTimer {
	gboolean reset;
	GDateTime* start;
	GDateTime* stop;
};

struct _mathgOperate {
	gdouble min;
	gdouble span;
	gint term;
	gchar* type;
};

struct _mathgEventCog {
	GtkViewport parent_instance;
	mathgEventCogPrivate * priv;
};

struct _mathgEventCogClass {
	GtkViewportClass parent_class;
};

struct _mathgConfFile {
	GFile* f;
};

struct _mathgNumberUtils {
	guint bas;
};

struct _mathgMathCog {
	gchar* ch;
	guint64 cor;
	gdouble deviation;
	guint64 err;
	gboolean isenter;
	mathgNumberUtils nu;
	mathgOperate operation;
	gint pm;
	mathgMyTimer problem;
	gchar* res;
	mathgElmnt* stra;
	gint stra_length1;
	gint straind;
	mathgMyTimer total;
};


GType mathg_elmnt_get_type (void) G_GNUC_CONST;
mathgElmnt* mathg_elmnt_dup (const mathgElmnt* self);
void mathg_elmnt_free (mathgElmnt* self);
void mathg_elmnt_copy (const mathgElmnt* self, mathgElmnt* dest);
void mathg_elmnt_destroy (mathgElmnt* self);
void mathg_elmnt_init (mathgElmnt *self, gint64 a, const gchar* s);
gchar* mathg_elmnt_to_string (mathgElmnt *self);
GType mathg_my_timer_get_type (void) G_GNUC_CONST;
mathgMyTimer* mathg_my_timer_dup (const mathgMyTimer* self);
void mathg_my_timer_free (mathgMyTimer* self);
void mathg_my_timer_copy (const mathgMyTimer* self, mathgMyTimer* dest);
void mathg_my_timer_destroy (mathgMyTimer* self);
void mathg_my_timer_init (mathgMyTimer *self, gboolean b);
gchar* mathg_my_timer_to_string (mathgMyTimer *self);
GType mathg_operate_get_type (void) G_GNUC_CONST;
mathgOperate* mathg_operate_dup (const mathgOperate* self);
void mathg_operate_free (mathgOperate* self);
void mathg_operate_copy (const mathgOperate* self, mathgOperate* dest);
void mathg_operate_destroy (mathgOperate* self);
void mathg_operate_init (mathgOperate *self, gint64 a, gint64 b, const gchar* c, gint d);
GType mathg_event_cog_get_type (void) G_GNUC_CONST;
mathgEventCog* mathg_event_cog_new (gchar** args, int args_length1);
mathgEventCog* mathg_event_cog_construct (GType object_type, gchar** args, int args_length1);
void mathg_event_cog_repaint (mathgEventCog* self);
GType mathg_conf_file_get_type (void) G_GNUC_CONST;
mathgConfFile* mathg_conf_file_dup (const mathgConfFile* self);
void mathg_conf_file_free (mathgConfFile* self);
void mathg_conf_file_copy (const mathgConfFile* self, mathgConfFile* dest);
void mathg_conf_file_destroy (mathgConfFile* self);
void mathg_conf_file_init (mathgConfFile *self);
gchar** mathg_conf_file_tryread (mathgConfFile *self, int* result_length1);
gchar** mathg_conf_file_trywrite (mathgConfFile *self, const gchar* s, int* result_length1);
GType mathg_math_cog_get_type (void) G_GNUC_CONST;
GType mathg_number_utils_get_type (void) G_GNUC_CONST;
mathgNumberUtils* mathg_number_utils_dup (const mathgNumberUtils* self);
void mathg_number_utils_free (mathgNumberUtils* self);
mathgMathCog* mathg_math_cog_dup (const mathgMathCog* self);
void mathg_math_cog_free (mathgMathCog* self);
void mathg_math_cog_copy (const mathgMathCog* self, mathgMathCog* dest);
void mathg_math_cog_destroy (mathgMathCog* self);
void mathg_math_cog_init (mathgMathCog *self, gchar** args, int args_length1);
void mathg_number_utils_init (mathgNumberUtils *self, const gchar* s);


G_END_DECLS

#endif
